@model WebApplicationWithImageAndIcon.Models.ViewModels.PlayerViewModel
@{
    ViewBag.Title = "Edit";
}

<div class="card mt-3">
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Players", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x => x.PlayerId)
            @Html.HiddenFor(x => x.Picture)
            @Html.AntiForgeryToken();
            <h2 class="display-4 alert alert-success mt-1">Update Player</h2>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row mb-3">
                @Html.LabelFor(x => x.PlayerName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.EditorFor(x => x.PlayerName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(x => x.PlayerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                @Html.LabelFor(x => x.PlayerGrade, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.EnumDropDownListFor(x => x.PlayerGrade, "---Select---", htmlAttributes: new { @class = "form-control form-control-sm" })
                </div>
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(x => x.PlayerGrade, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                @Html.LabelFor(x => x.SportsId, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.SportsId, ViewBag.sports as SelectList, "---Select---", htmlAttributes: new { @class = "form-control form-control-sm" })
                </div>
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(x => x.SportsId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                @Html.LabelFor(x => x.JoinDate, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.EditorFor(x => x.JoinDate, new { htmlAttributes = new { @class = "form-control form-control-sm", type = "date" } })
                </div>
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(x => x.JoinDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                @Html.LabelFor(x => x.Picture, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control form-control-sm", type = "file" })
                    @if (!string.IsNullOrEmpty(Model.PicturePath))
                    {
                        <img src="@Url.Content(Model.PicturePath)" style="margin-top:4px;" width="100" height="100" />
                    }
                </div>
                <div class="col-sm-2">
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-sm-10 offset-2">
                    <input type="reset" class="btn btn-secondary" value="Reset" />
                    <input type="submit" class="btn btn-primary" value="Update" />
                </div>
            </div>
        }
    </div>
</div>


